#pragma once
#include<iostream>
#include<Windows.h>
#include <stdio.h>
#include<time.h>
#include "CMap.h"
#include"CPacMan.h"
#include "CMonster.h"

void gotoxy(short y, short x);

const int g_MapInit[ROW][COL]=                   
{ //25
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  //28
  1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1, //monster 坐标 2，1          2，26
  1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,
  1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,
  1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,4,4,4,4,4,4,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0,0,0,0,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,4,4,4,4,4,4,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,//19，1  19，26
  1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,
  1,0,0,0,1,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,1, //起始点   19，14
  1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,
  1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,
  1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
};

int g_Map[ROW][COL] =
{ //25
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  //28
  1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,2,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,2,1,
  1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,
  1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,
  1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,4,4,4,4,4,4,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0,0,0,0,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,4,4,4,4,4,4,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,1,1,
  1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,
  1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,
  1,2,0,0,1,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,2,1,
  1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,
  1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,
  1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
};

void CMap::ShowMap()
{
	CMap().gotoxy(0, 0); //刷新屏幕
	cout << "________________________________________________________________" <<"\n"<< endl;
	cout <<"操作说明:  w 上 s 下 a 左 d 右  1重新开始  2退出"  <<endl;
	cout<<"当前剩余生命值: "<<g_nLifeValue<<"当前分数: " <<g_nPoint <<"/277"<< endl;
	cout << "________________________________________________________________" << endl;
	if (g_nPoint == 277)
	{
		WinGame();
	}
	for (int i = 0; i < ROW; i++)
	{
		for (int j = 0; j < COL; j++)
		{
			if (g_Map[i][j] == 1) //wall
			{
				cout << "■";
			}
			if (g_Map[i][j] == 0) //food
			{
				cout << "..";
			}
			if (g_Map[i][j] == 2)  //monster
			{
				cout << "▲";
			}
			if (g_Map[i][j] == 3)  //PacMan
			{
				cout << "★";
			}
			if (g_Map[i][j] == 4)
			{
				cout << "  ";
			}
		}
		cout << endl;
	}

	return;
}

void CMap::WinGame()
{
	//system("cls");
	CMap().gotoxy(0, 0);  //刷新
	cout << "________________________________________________________________" << "\n" << endl;
	for (int i = 0; i < ROW / 2 - 2; i++)
		cout << " " << endl;
	cout << "\t\tYOU WIN !!!!!";
	cout << "\t\t R 重新开始" << "    Q 退出" << endl;
	for (int i = 0; i < ROW / 2 - 2; i++)
		cout << " " << endl;
	cout << "________________________________________________________________" << "\n" << endl;
	CMap().SelectQuit();
}

void CMap::gotoxy(short y, short x) {
	COORD pos = { x,y };//COORD是Windows API中定义的一种结构，表示一个字符在控制台屏幕上的坐标。
	//pos.X=x,pos.Y=y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
	//GetStdHandle用于从一个特定的标准设备（标准输入、标准输出或标准错误）中取得一个句柄（用来标识不同设备的数值。
	//STD_INPUT_HANDLE是标准输入，STD_OUTPUT_HANDLE是标准输出，STD_ERROR_HANDLE是标准错误。
}

void CMap::DeadGame()
{
	//CMap().gotoxy(0, 0);
	system("cls");
	cout << "________________________________________________________________" << "\n" << endl;
	for (int i = 0; i < ROW / 2 - 3; i++)
		cout << " " << endl;
	cout << "\t\tGAME OVER !!!!!";
	cout << "\tYour points are  " << g_nPoint << endl;
	cout << "\t\t R 重新开始" << "     Q 退出" << endl;
	for (int i = 0; i < ROW / 2 - 3; i++)
		cout << " " << endl;
	cout << "________________________________________________________________" << "\n" << endl;
	CMap().SelectQuit();
}

void CMap::SelectQuit()
{
	char ch = _getch();
	switch (ch)
	{
	case 'r':
	case 'R':
		CMap().newGame();
		return;
	case 'q':
	case 'Q':
		exit(0);
	}
}

void CMap::newGame()
{
	CMap().NewInitMap();
	g_nPoint = 0;
	g_nLifeValue = 3;
}

void CMap::NewInitMap()
{
	for (int i = 0; i < ROW; i++)
	{
		for (int j = 0; j < COL; j++)
		{
			g_Map[i][j] = g_MapInit[i][j];
		}
	}

}

